This is to react basic.
Igniting the app.
1- npm is the biggest package manager.
2- npm init  - this creates package.json file where we have all necessary things or it just keeps the track of all dependencies.
3- when we do create react app web pack is used as bundler.We need to bundle our file when we want to put it in production.
4- but now as we r using npm we will use parser as bundler.
5 - npm install -D parcel
-> two type of dependency we can install one is dev depedency and there r normal dependency.
dev depedency - is used while dependency
normal - used in production or dev anywhere.
6 - "^2.8.3" this is ^ carrot this is to keep the dependency even there are minor updates.
Ex- 2.8.4 can be "^2.8.3" in package.json
7 - package.lock-json keeps exact track of version

8- parcel can have its own dependecies this is called transitive dependency, that's why we got so many dependencies when we installed parcel.
9 - if u see the node module and see any package it will have its own package.json as it can have their own dependency.
10 - just like we have npm we npx
npm is installing
npx is for execution.
11 - npx parcel index.html will execute parcel.
12 - tell if this is not a browser script this is considered as a module.
#parcel
-Dev Build
-local server
- HMR - Hot Module Replacement
- File Watching Algorithm - written in c++
- caching - Faster build
- Image Optimization
- Minification
- Bundling
- compress
- code splitting
- Differential Bundling - support older browser
- it creates different build for production and develop.
read parcel docs mf

13- i have removed main from package.json as we give entry point when we do code.


1- they replace html thing if u have written.
2 - JSX-it is html like syntax.
const jsxHeading = <h1>Namaste react using jsx</h1>.
3 - 2 ways to create to create html
with react and jsx.
4 - Js engine understands ES6(it can be any version) or echmascript
5 - code is transpilled before it goes to js engine by parcel - parcel has babel which is used to transpile.Babel was installed when we haev installed babel.
6 - the jsx ---> react.createElement ---> react element ----> html element.this conversion is done by babel.
7- function component is js function thaT RETURN react element.

8- A component inside the other component is called component composition.
9 - {} u can write any js code inside this which can be opened in <div></div> fo react functional component.
10- the {} the thing inside {} or jsx is sanitized before rendering as security.  



1 - create div. for different things.
2 - config driven ui 
- our website is driven by data, the ui is driven by data or config.they will send all data to be displayed on ui acording to area or location maybe.
* when u wan to pass js obeject u have to use {}.
3- if it is default export then import resObj or import {resObj}.
4 -  Default export can export only one thing from a js file.
5 - when state variable changes react re-renders the variable.




React concepts lets goooo

Reconciliation Algorithm(React Fibre)
-------------------------------------

React.createElement('h1') => this creates a react object which is virtual dom. when there is difference in virtual dom react re-renders the component.








